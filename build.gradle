/*
 * Copyright 2017-2018 Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Version {
    String major, minor, build

    @Override
    String toString() {
        "${major}.${minor}.${this.build}"
    }
}

buildscript {
    ext {
        kotlin_version = '1.2.21'
        kotlinx_version = '0.22.1'
        shadow_version = '2.0.1'
        jda_version = '3.5.0_338'
        jda_utilities_version = '2.1'
        lavaplayer_version = '1.2.49'
        h2_version = '1.4.196'
        logback_version = '1.2.3'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'

def ver = new Version(major: 0, minor: 8, build: 6)
group 'xyz.nightfury'
version "$ver"
mainClassName = "${group}.${rootProject.name}Kt"

sourceCompatibility = 9
targetCompatibility = 9

sourceSets {
    test {
        kotlin.srcDirs += 'src/test/kotlin'

        compileClasspath = main.output + main.resources
        runtimeClasspath = main.output + main.resources
    }

    rewrite {
        kotlin.srcDirs += 'src/rewrite/kotlin'
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"

    // JDA
    compile "net.dv8tion:JDA:$jda_version"
    compile "com.jagrosh:jda-utilities-commons:$jda_utilities_version"
    compile "com.sedmelluq:lavaplayer:$lavaplayer_version"

    // Config
    compile "ninja.leaping.configurate:configurate-hocon:3.3"

    // API Requests
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.google.apis:google-api-services-youtube:v3-rev189-1.23.0'

    // h2
    compile "com.h2database:h2:$h2_version"

    // Logging
    compile "ch.qos.logback:logback-classic:$logback_version"

    // JagTag
    compile 'com.jagrosh:JagTag:0.5'

    // Subprojects
    compile project(":commons")
    compile project(":database")


    // Kotlin
    rewriteCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    rewriteCompile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    rewriteCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    rewriteCompile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"

    // JDA
    rewriteCompile "net.dv8tion:JDA:$jda_version"
    rewriteCompile "com.jagrosh:jda-utilities-commons:$jda_utilities_version"
    rewriteCompile "com.sedmelluq:lavaplayer:$lavaplayer_version"

    // Config
    rewriteCompile "ninja.leaping.configurate:configurate-hocon:3.3"

    // API Requests
    rewriteCompile 'org.jsoup:jsoup:1.10.2'
    rewriteCompile 'com.google.apis:google-api-services-youtube:v3-rev189-1.23.0'

    // h2
    rewriteCompile "com.h2database:h2:$h2_version"

    // Logging
    rewriteCompile "ch.qos.logback:logback-classic:$logback_version"

    // JagTag
    rewriteCompile 'com.jagrosh:JagTag:0.5'

    // Subprojects
    rewriteCompile project(":commons")
    rewriteCompile project(":database")
}

jar {
    manifest {
        attributes 'Implementation-Version': "$version",
                   'Main-Class': mainClassName
    }
}

shadowJar {
    baseName 'NightFury'
    version ''
    classifier ''

    exclude('com/jagrosh/jdautilities/commandclient/**')
    exclude('android/**')
    exclude('README.md')

    manifest {
        attributes 'Manifest-Version': "${ver.major}.${ver.minor}"
    }
}

configurations {
    components {
        transitive = true
    }
}

allprojects {
    project.ext {
        versionObj = ver
    }

    group 'xyz.nightfury'
    version "$ext.versionObj"

    apply plugin: 'java'
    apply plugin: 'kotlin'
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = 9
    targetCompatibility = 9

    repositories {
        jcenter()
        maven { url 'https://jitpack.io/' }
    }

    dependencies {
        // Kotlin
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
        compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_version"

        // Testing
        testCompile 'junit:junit:4.12'
    }

    kotlin {
        experimental.coroutines = 'ENABLE'
    }

    compileKotlin {
        kotlinOptions {
            apiVersion = "1.2"
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            apiVersion = "1.2"
            jvmTarget = "1.8"
        }
    }

    compileJava {
        options.encoding = 'UTF-8'
    }

    compileTestJava {
        options.encoding = 'UTF-8'
    }

    build {
        dependsOn clean
        dependsOn classes
        dependsOn shadowJar

        classes.mustRunAfter clean
        shadowJar.mustRunAfter classes
    }
}

compileRewriteKotlin {
    kotlinOptions {
        apiVersion = "1.2"
        jvmTarget = "1.8"
    }
}

compileRewriteJava {
    options.encoding = 'UTF-8'
}

wrapper {
    gradleVersion '4.3.1'
}

build {
    doFirst {
        rootProject.childProjects.values().forEach { it.build }
    }
}
