/*
 * Copyright 2017 Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Version {
    String major, minor, build

    @Override
    String toString() {
        "${major}.${minor}.${this.build}"
    }
}

buildscript {
    ext.kotlin_version = '1.2.0-rc-39'
    ext.ktor_version = '0.3.3'

    repositories {
        jcenter()
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'idea'
    id 'application'
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

def versionObj = new Version(major: 0, minor: 7, build: 7)
group = 'xyz.nightfury'
version = versionObj

apply plugin: 'java'
apply plugin: 'kotlin'

mainClassName = "${group}.${rootProject.name}Kt"

sourceSets {
    test.kotlin.srcDirs += 'src/test/kotlin'
    test {
        compileClasspath = main.output + main.resources
        runtimeClasspath = main.output + main.resources
    }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3"

    // JDA
    compile 'net.dv8tion:JDA:3.3.1_284'
    compile 'com.github.JDA-Applications:JDA-Utilities:f9a0402'
    compile 'com.sedmelluq:lavaplayer:1.2.44'

    // API Requests
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.google.apis:google-api-services-youtube:v3-rev183-1.22.0'

    // JagTag
    compile 'com.jagrosh:JagTag:0.5'
}

jar {
    manifest {
        attributes 'Implementation-Version': version.toString(), 'Main-Class': mainClassName
    }
}

shadowJar {
    baseName = 'NightFury'
    version = ''
    classifier = ''

    // Non-Necessary Resources //

    // JDA-Utilities
    exclude('com/jagrosh/jdautilities/commandclient/**')

    // h2
    exclude('android/**')

    manifest {
        attributes 'Manifest-Version' : "${versionObj.major}.${versionObj.minor}"
    }
}

allprojects {

    version = versionObj.toString()

    apply plugin: 'java'
    apply plugin: 'kotlin'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io/' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap-1.2' }
    }

    dependencies {
        // Kotlin
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        compileOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        compileOnly "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19.3"

        // h2
        compile 'com.h2database:h2:1.4.196'

        // Logging
        compile 'ch.qos.logback:logback-classic:1.2.3'
        //kapt group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc2'

        // Testing
        testCompile 'junit:junit:4.12'
    }

    kotlin {
        experimental.coroutines = 'ENABLE'
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

    compileJava.options.encoding = 'UTF-8'
    compileTestJava.options.encoding = 'UTF-8'

    build {
        dependsOn clean
        dependsOn classes
        dependsOn shadowJar

        classes.mustRunAfter clean
        shadowJar.mustRunAfter classes
    }
}

wrapper {
    gradleVersion '4.0'
}

build {
    rootProject.childProjects.values().forEach { it.build }
}