/*
 * Copyright 2017 Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
class Version {
    String major, minor, build

    @Override
    String toString() {
        "${major}.${minor}.${this.build}"
    }
}

buildscript {
    ext.kotlin_version = '1.1.4-2'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'idea'
    id 'application'
    id "com.github.johnrengelman.shadow" version "2.0.1"
}

apply plugin: 'java'
apply plugin: 'kotlin'

def versionObj = new Version(major: 0, minor: 7, build: 2)
group = 'me.kgustave'
version = versionObj
mainClassName = "${group}.${rootProject.name.toLowerCase()}.${rootProject.name}Kt"

def jdaVersion = '3.3.1_280'
def jdaUtilsVersion = '1.8'
def kjdaUtilsVersion = '0.5'

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    test.kotlin.srcDirs += 'src/test/kotlin'
    test {
        compileClasspath = main.output + main.resources
        runtimeClasspath = main.output + main.resources
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io/' }
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.14'
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // JDA
    compile "net.dv8tion:JDA:$jdaVersion"
    compile "com.jagrosh:JDA-Utilities:$jdaUtilsVersion"
    compile "com.github.TheMonitorLizard:KJDA-Utilities:$kjdaUtilsVersion"
    compile 'com.sedmelluq:lavaplayer:1.2.44'

    // h2
    compile 'com.h2database:h2:1.4.196'

    // APIs
    compile 'org.jsoup:jsoup:1.10.2'
    compile 'com.google.apis:google-api-services-youtube:v3-rev183-1.22.0'

    // JagTag
    compile 'com.jagrosh:JagTag:0.5'

    // Logging
    compile 'ch.qos.logback:logback-classic:1.2.3'

    // Testing
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'com.github.SvenWoltmann:color-thief-java:v1.1.1'
}

jar {
    manifest {
        attributes 'Implementation-Version': version.toString(), 'Main-Class': mainClassName
    }
}

shadowJar {
    baseName = 'NightFury'
    version = ''
    classifier = ''

    // Non-Necessary Resources //

    // JDA-Utilities
    exclude('com/jagrosh/jdautilities/commandclient/**')

    // KJDA
    exclude('club/minnced/kjda/events/**')

    // KJDA-Utilities
    exclude(
            'me/kgustave/kjdautils/command/**',
            'me/kgustave/kjdautils/waiter/**',
            'me/kgustave/kjdautils/KCommandClient**',
            'me/kgustave/kjdautils/KJDA**',
            'me/kgustave/kjdautils/Emojis**'
    )

    // h2
    exclude('android/**')

    // Unimplemented Internals
    exclude('me.kgustave.nightfury.listeners.AntiAdsListener**')

    manifest {
        attributes 'Manifest-Version' : "${versionObj.major}.${versionObj.minor}"
    }
}

kotlin.experimental.coroutines 'enable'

compileJava.options.encoding = 'UTF-8'
compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestJava.options.encoding = 'UTF-8'
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

wrapper {
    gradleVersion '4.0'
}

build {
    dependsOn clean
    dependsOn classes
    dependsOn shadowJar

    classes.mustRunAfter clean
    shadowJar.mustRunAfter classes
}